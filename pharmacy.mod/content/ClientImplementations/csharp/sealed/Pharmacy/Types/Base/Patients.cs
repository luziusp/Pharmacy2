// Generated by rocketdb: Do not edit this code!

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

using System.Linq;
using System;

namespace Pharmacy.Types.Base
{
    #pragma warning disable 3021

    public abstract class Patients
    {

        [CLSCompliantAttribute(false)]
        public const string __typeId = "7612e163-acb4-11e9-8fb9-9dd57dcb9b05";
        [CLSCompliantAttribute(false)]
        public const string __typeName = "pharmacy.Patients";

        private string __domainId;
        private string __ownerId;
        private string __creatorId;
        private string __state;
        private string __operation;
        private long? __tts;
        private int? __sequence;
        private long? __ttsTo;
        private string id;
        private string firstName;
        private string name;
        private System.DateTime dateOfBirth;
        private System.DateTime dateOfDeath;

        [CLSCompliantAttribute(false)]
        public virtual string __TypeId {
            get { return __typeId; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __TypeName {
            get { return __typeName; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __DomainId {
            get { return __domainId; }
            private set { __domainId = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __OwnerId {
            get { return __ownerId; }
            private set { __ownerId = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __CreatorId {
            get { return __creatorId; }
            private set { __creatorId = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __State {
            get { return __state; }
            private set { __state = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __Operation {
            get { return __operation; }
            private set { __operation = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual long? __Tts {
            get { return __tts; }
            private set { __tts = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual int? __Sequence {
            get { return __sequence; }
            private set { __sequence = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual long? __TtsTo {
            get { return __ttsTo; }
            private set { __ttsTo = value; }
        }

        public virtual string Id {
            get { return id; }
            set { id = value; }
        }

        public virtual string FirstName {
            get { return firstName; }
            set { firstName = value; }
        }

        public virtual string Name {
            get { return name; }
            set { name = value; }
        }

        public virtual System.DateTime DateOfBirth {
            get { return dateOfBirth; }
            set { dateOfBirth = value; }
        }

        public virtual System.DateTime DateOfDeath {
            get { return dateOfDeath; }
            set { dateOfDeath = value; }
        }

        public static Pharmacy.Types.Patients FromJson(JObject jo)
        {
            if (jo == null)
            {
                return null;
            }
            Pharmacy.Types.Patients obj = new Pharmacy.Types.Patients();
            obj.SetJson(jo);
            return obj;
        }

        protected virtual void SetJson(JObject jo)
        {
            this.__DomainId = (string)jo["__domainId"];
            this.__OwnerId = (string)jo["__ownerId"];
            this.__CreatorId = (string)jo["__creatorId"];
            this.__State = (string)jo["__state"];
            this.__Operation = (string)jo["__operation"];
            this.__Tts = (long?)jo["__tts"];
            this.__Sequence = (int?)jo["__sequence"];
            this.__TtsTo = (long?)jo["__ttsTo"];
            this.Id = (string)jo["id"];
            this.FirstName = (string)jo["firstName"];
            this.Name = (string)jo["name"];
            this.DateOfBirth = (System.DateTime)jo["dateOfBirth"];
            this.DateOfDeath = (System.DateTime)jo["dateOfDeath"];
        }

        public virtual JObject ToJson()
        {
            JTokenWriter writer = new JTokenWriter();
            ToJson(writer, false);
            return (JObject)writer.Token;
        }

        public virtual void ToJson(JsonWriter writer, bool injectType)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("__typeId");
            writer.WriteValue(this.__TypeId);
            WriteMembers(writer);
            writer.WriteEndObject();
        }

        protected virtual void WriteMembers(JsonWriter writer)
        {
            {
                writer.WritePropertyName("__tts");
                writer.WriteValue(this.__Tts);
            }
            {
                writer.WritePropertyName("id");
                writer.WriteValue(this.Id);
            }
            {
                writer.WritePropertyName("firstName");
                writer.WriteValue(this.FirstName);
            }
            {
                writer.WritePropertyName("name");
                writer.WriteValue(this.Name);
            }
            {
                writer.WritePropertyName("dateOfBirth");
                writer.WriteValue(this.DateOfBirth.ToUniversalTime().ToString("yyyy-MM-dd"));
            }
            {
                writer.WritePropertyName("dateOfDeath");
                writer.WriteValue(this.DateOfDeath.ToUniversalTime().ToString("yyyy-MM-dd"));
            }
        }

        public virtual void Validate()
        {
        }

        public override string ToString()
        {
            return ToJson().ToString();
        }

    }
}
