// Generated by rocketdb: Do not edit this code!

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

using System.Linq;
using System;

namespace Pharmacy.Types.Base
{
    #pragma warning disable 3021

    public abstract class PatientMedication
    {

        [CLSCompliantAttribute(false)]
        public const string __typeId = "9793afdb-acae-11e9-a183-cfa452e7415c";
        [CLSCompliantAttribute(false)]
        public const string __typeName = "pharmacy.PatientMedication";

        private string __domainId;
        private string __ownerId;
        private string __creatorId;
        private string __state;
        private string __operation;
        private long? __tts;
        private int? __sequence;
        private long? __ttsTo;
        private string id;
        private System.DateTime prescriptionDate;
        private System.DateTime prescriptionEnd;
        private System.Numerics.BigInteger posologyMorning;
        private System.Numerics.BigInteger posologyMidday;
        private System.Numerics.BigInteger posologyEvening;
        private System.Numerics.BigInteger posologyNight;
        private string prescribedToId;
        private string basedForId;

        [CLSCompliantAttribute(false)]
        public virtual string __TypeId {
            get { return __typeId; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __TypeName {
            get { return __typeName; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __DomainId {
            get { return __domainId; }
            private set { __domainId = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __OwnerId {
            get { return __ownerId; }
            private set { __ownerId = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __CreatorId {
            get { return __creatorId; }
            private set { __creatorId = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __State {
            get { return __state; }
            private set { __state = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual string __Operation {
            get { return __operation; }
            private set { __operation = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual long? __Tts {
            get { return __tts; }
            private set { __tts = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual int? __Sequence {
            get { return __sequence; }
            private set { __sequence = value; }
        }

        [CLSCompliantAttribute(false)]
        public virtual long? __TtsTo {
            get { return __ttsTo; }
            private set { __ttsTo = value; }
        }

        public virtual string Id {
            get { return id; }
            set { id = value; }
        }

        public virtual System.DateTime PrescriptionDate {
            get { return prescriptionDate; }
            set { prescriptionDate = value; }
        }

        public virtual System.DateTime PrescriptionEnd {
            get { return prescriptionEnd; }
            set { prescriptionEnd = value; }
        }

        public virtual System.Numerics.BigInteger PosologyMorning {
            get { return posologyMorning; }
            set { posologyMorning = value; }
        }

        public virtual System.Numerics.BigInteger PosologyMidday {
            get { return posologyMidday; }
            set { posologyMidday = value; }
        }

        public virtual System.Numerics.BigInteger PosologyEvening {
            get { return posologyEvening; }
            set { posologyEvening = value; }
        }

        public virtual System.Numerics.BigInteger PosologyNight {
            get { return posologyNight; }
            set { posologyNight = value; }
        }

        public virtual string PrescribedToId {
            get { return prescribedToId; }
            set { prescribedToId = value; }
        }

        public virtual string BasedForId {
            get { return basedForId; }
            set { basedForId = value; }
        }

        public static Pharmacy.Types.PatientMedication FromJson(JObject jo)
        {
            if (jo == null)
            {
                return null;
            }
            Pharmacy.Types.PatientMedication obj = new Pharmacy.Types.PatientMedication();
            obj.SetJson(jo);
            return obj;
        }

        protected virtual void SetJson(JObject jo)
        {
            this.__DomainId = (string)jo["__domainId"];
            this.__OwnerId = (string)jo["__ownerId"];
            this.__CreatorId = (string)jo["__creatorId"];
            this.__State = (string)jo["__state"];
            this.__Operation = (string)jo["__operation"];
            this.__Tts = (long?)jo["__tts"];
            this.__Sequence = (int?)jo["__sequence"];
            this.__TtsTo = (long?)jo["__ttsTo"];
            this.Id = (string)jo["id"];
            this.PrescriptionDate = (System.DateTime)jo["prescriptionDate"];
            this.PrescriptionEnd = (System.DateTime)jo["prescriptionEnd"];
            this.PosologyMorning = jo["posologyMorning"].Value<System.Numerics.BigInteger>();
            this.PosologyMidday = jo["posologyMidday"].Value<System.Numerics.BigInteger>();
            this.PosologyEvening = jo["posologyEvening"].Value<System.Numerics.BigInteger>();
            this.PosologyNight = jo["posologyNight"].Value<System.Numerics.BigInteger>();
            this.PrescribedToId = (string)jo["prescribedToId"];
            this.BasedForId = (string)jo["basedForId"];
        }

        public virtual JObject ToJson()
        {
            JTokenWriter writer = new JTokenWriter();
            ToJson(writer, false);
            return (JObject)writer.Token;
        }

        public virtual void ToJson(JsonWriter writer, bool injectType)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("__typeId");
            writer.WriteValue(this.__TypeId);
            WriteMembers(writer);
            writer.WriteEndObject();
        }

        protected virtual void WriteMembers(JsonWriter writer)
        {
            {
                writer.WritePropertyName("__tts");
                writer.WriteValue(this.__Tts);
            }
            {
                writer.WritePropertyName("id");
                writer.WriteValue(this.Id);
            }
            {
                writer.WritePropertyName("prescriptionDate");
                writer.WriteValue(this.PrescriptionDate.ToUniversalTime().ToString("yyyy-MM-dd"));
            }
            {
                writer.WritePropertyName("prescriptionEnd");
                writer.WriteValue(this.PrescriptionEnd.ToUniversalTime().ToString("yyyy-MM-dd"));
            }
            {
                writer.WritePropertyName("posologyMorning");
                writer.WriteValue(this.PosologyMorning);
            }
            {
                writer.WritePropertyName("posologyMidday");
                writer.WriteValue(this.PosologyMidday);
            }
            {
                writer.WritePropertyName("posologyEvening");
                writer.WriteValue(this.PosologyEvening);
            }
            {
                writer.WritePropertyName("posologyNight");
                writer.WriteValue(this.PosologyNight);
            }
            {
                writer.WritePropertyName("prescribedToId");
                writer.WriteValue(this.PrescribedToId);
            }
            {
                writer.WritePropertyName("basedForId");
                writer.WriteValue(this.BasedForId);
            }
        }

        public virtual void Validate()
        {
        }

        public override string ToString()
        {
            return ToJson().ToString();
        }

    }
}
